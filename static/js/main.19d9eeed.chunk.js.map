{"version":3,"sources":["app/functions/clear.js","app/functions/percentify.js","app/functions/decimate.js","app/functions/makeNegativeIfZero.js","app/functions/checkForBreakage.js","app/functions/process.js","app/components/Output.js","app/components/Button.js","app/components/Buttons.js","app/index.js","index.js","app/functions/solve.js"],"names":["clear","document","getElementById","innerText","percentify","output","current","roundTo","indexOf","length","toFixed","decimate","operators","lastChar","slice","strFromLastPoint","lastIndexOf","match","makeNegativeIfZero","checkForBreakage","key","process","display","innerHTML","solve","Output","id","this","props","React","Component","Button","value","onClick","Buttons","class","App","handleClick","input","newOutput","setState","state","ReactDOM","render","StrictMode","eval"],"mappings":"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","file":"static/js/main.19d9eeed.chunk.js","sourcesContent":["const clear = () => {\n  document.getElementById(\"output\").innerText = \"0\";\n}\n\nexport default clear;","const percentify = () => {\n  let output = document.getElementById(\"output\");\n  let current = output.innerText;\n  let roundTo = current.indexOf(\".\") === -1 ? 2 : current.length - current.indexOf(\".\") + 1;\n\n  output.innerText = (current / 100).toFixed(roundTo);\n}\n\nexport default percentify;","const decimate = () => {\n  let operators = /\\+|\\-|\\*|\\//;\n  let output = document.getElementById(\"output\");\n  let current = output.innerText;\n  let lastChar = current.slice(-1);\n  let strFromLastPoint = current.slice(current.lastIndexOf(\".\"));\n\n  if (current.lastIndexOf(\".\") === -1) {\n    output.innerText += lastChar.match(operators) ? \"0.\" : \".\";\n  }\n  else if (strFromLastPoint.match(operators)) {\n    output.innerText += lastChar.match(operators) ? \"0.\" : \".\";\n  }\n}\n\nexport default decimate;","const makeNegativeIfZero = () => {\n  let output = document.getElementById(\"output\");\n  let current = output.innerText;\n  if (current === \"0\") {\n    output.innerText = \"-\";\n    return \"break\";\n  }\n}\n\nexport default makeNegativeIfZero;","const checkForBreakage = (key) => {\n  let output = document.getElementById(\"output\");\n  let current = output.innerText;\n  let lastChar = current.slice(-1);\n  let operators = /\\+|\\-|\\*|\\//;\n\n  if (current === \"-\" || current === \"0\") return \"break\";\n  else if (lastChar.match(operators) || lastChar.match(/\\./)) {\n    output.innerText = current.slice(0, -1) + key;\n    return \"break\";\n  }\n}\n\nexport default checkForBreakage;","import clear from \"./clear\";\nimport percentify from \"./percentify\";\nimport solve from \"./solve\";\nimport decimate from \"./decimate\";\nimport makeNegativeIfZero from \"./makeNegativeIfZero\";\nimport checkForBreakage from \"./checkForBreakage\";\n\nconst process = (key) => {\n  let output = document.getElementById(\"output\");\n  let display = output.innerHTML;\n\n    switch (key) {\n      case \"C\":\n        clear();\n        break;\n\n      case \"%\":\n        if (output.innerText.length > 16) return; // keep from leaking\n        percentify();\n        break;\n\n      case \"Enter\":\n      case \"=\":\n        solve();\n        break;\n\n      case \".\":\n        decimate();\n        break;\n\n      case \"-\":\n        if (makeNegativeIfZero() === \"break\") break;\n\n      case \"+\":\n      case \"*\":\n      case \"/\":\n        if (checkForBreakage(key) === \"break\") break;\n\n      default:\n        if (output.innerText.length > 16) return; // keep from leaking\n        output.innerText = display === \"0\" ? key : display + key;\n    }\n}\n\nexport default process;","import React from \"react\";\n\nexport default class Output extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"output-container\">\n\t\t\t\t<p id=\"output\">{this.props.output}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from \"react\";\n\nexport default class Button extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<button id={this.props.id} value={this.props.value} onClick={() => this.props.process(this.props.value)}>{this.props.value}</button>\n\t\t);\n\t}\n}","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default class Buttons extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet process = this.props.process;\n\n\t\treturn (\n\t\t\t<div class=\"buttons\">\n\t\t\t\t<Button id=\"clear\" value=\"C\" process={process}/>\n\t\t\t\t<Button id=\"percentify\" value=\"%\" process={process} />\n\t\t\t\t<Button id=\"divide\" value=\"/\" process={process} />\n\n\t\t\t\t<Button id=\"seven\" value=\"7\" process={process} />\n\t\t\t\t<Button id=\"eight\" value=\"8\" process={process} />\n\t\t\t\t<Button id=\"nine\" value=\"9\" process={process} />\n\t\t\t\t<Button id=\"multiply\" value=\"*\" process={process} />\n\n\t\t\t\t<Button id=\"four\" value=\"4\" process={process} />\n\t\t\t\t<Button id=\"five\" value=\"5\" process={process} />\n\t\t\t\t<Button id=\"six\" value=\"6\" process={process} />\n\t\t\t\t<Button id=\"subtract\" value=\"-\" process={process} />\n\n\t\t\t\t<Button id=\"one\" value=\"1\" process={process} />\n\t\t\t\t<Button id=\"two\" value=\"2\" process={process} />\n\t\t\t\t<Button id=\"three\" value=\"3\" process={process} />\n\t\t\t\t<Button id=\"add\" value=\"+\" process={process} />\n\n\t\t\t\t<Button id=\"decimate\" value=\".\" process={process} />\n\t\t\t\t<Button id=\"zero\" value=\"0\" process={process} />\n\t\t\t\t<Button id=\"solve\" value=\"=\" process={process} />\n\t\t\t</div>\n\t\t);\n\t}\n}","import './index.css';\nimport process from './functions/process';\nimport Output from './components/Output';\nimport React from 'react';\nimport Buttons from './components/Buttons';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"0\"\n    }\n  }\n\n  handleClick = (input) => {\n    let newOutput = process(input);\n    this.setState({\n      output: newOutput\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"calculator\">\n        <Output output={this.state.output}/>\n        <Buttons process={this.handleClick}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const solve = () => {\n  let output = document.getElementById(\"output\");\n  let current = output.innerText;\n\n  output.innerText = eval(current);\n\n  if (current === \"Infinity\" || current === \"-Infinity\") output.innerText = \"Undefined\";\n}\n\nexport default solve;"],"sourceRoot":""}