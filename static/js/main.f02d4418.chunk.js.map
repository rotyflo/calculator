{"version":3,"sources":["app/functions/handlePercent.js","app/functions/handleDecimal.js","app/functions/handleOperator.js","app/functions/process.js","app/components/Output.js","app/components/Button.js","app/components/Buttons.js","app/index.js","index.js","app/functions/endsWithOperator.js","app/functions/solve.js"],"names":["handlePercent","output","roundTo","indexOf","length","toFixed","handleDecimal","operators","decimalEnding","slice","match","operatedSinceDecimal","lastIndexOf","handleOperator","key","endsWithOperator","process","solve","Output","id","this","props","React","Component","Button","value","onClick","Buttons","class","App","handleClick","newOutput","state","setState","ReactDOM","render","StrictMode","document","getElementById","string","search","eval","toString"],"mappings":"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","file":"static/js/main.f02d4418.chunk.js","sourcesContent":["const handlePercent = (output) => {\n  let roundTo = output.indexOf(\".\") === -1 ? 2 : output.length - output.indexOf(\".\") + 1;\n\n  return (output / 100).toFixed(roundTo);\n}\n\nexport default handlePercent;","const handleDecimal = (output) => {\n  let operators = /\\+|\\-|\\*|\\//;\n  let decimalEnding = output.slice(-1).match(operators) ? \"0.\" : \".\";\n  let strFromLastPoint = output.slice(output.lastIndexOf(\".\"));\n  let operatedSinceDecimal = strFromLastPoint.match(operators);\n  let notExistDecimal = output.lastIndexOf(\".\") === -1;\n\n  if (notExistDecimal || operatedSinceDecimal) {\n    return output + decimalEnding;\n  }\n  return output;\n}\n\nexport default handleDecimal;","import endsWithOperator from \"./endsWithOperator\";\n\nconst handleOperator = (key, output) => {\n  if (output.length === 1) {\n    if (output === \"0\" && key === \"-\") {\n      return \"-\";\n    }\n    else if (endsWithOperator(output)) {\n      return output;\n    }\n  }\n  else if (endsWithOperator(output)) {\n    return output.slice(0, -1) + key;\n  }\n  return output + key;\n}\n\nexport default handleOperator;","import handlePercent from \"./handlePercent\";\nimport handleDecimal from \"./handleDecimal\";\nimport handleOperator from \"./handleOperator\";\nimport solve from \"./solve\";\n\nconst process = (key, output) => {  \n  switch (key) {\n    case \"C\":\n      return \"0\";\n\n    case \"Enter\":\n    case \"=\":\n      return solve(output);\n  }\n\n  if (output.length > 16) return output; // keep from leaking\n  \n  switch (key) {\n    case \"%\":\n      return handlePercent(output);\n\n    case \".\":\n      return handleDecimal(output);\n\n    case \"+\":\n    case \"*\":\n    case \"/\":\n    case \"-\":\n      return handleOperator(key, output);\n\n    default:\n      return output === \"0\" ? key : output + key;\n  }\n}\n\nexport default process;","import React from \"react\";\n\nexport default class Output extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"output-container\">\n\t\t\t\t<p id=\"output\">{this.props.output}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from \"react\";\n\nexport default class Button extends React.Component {\n\trender() {\n\t\tlet id = this.props.id;\n\t\tlet value = this.props.value;\n\t\tlet process = this.props.process;\n\n\t\treturn (\n\t\t\t<button id={id} value={value} onClick={() => process(value)}>{value}</button>\n\t\t);\n\t}\n}","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default class Buttons extends React.Component {\n\trender() {\n\t\tlet process = this.props.process;\n\n\t\treturn (\n\t\t\t<div class=\"buttons\">\n\t\t\t\t<Button id=\"clear\" value=\"C\" process={process}/>\n\t\t\t\t<Button id=\"percentify\" value=\"%\" process={process} />\n\t\t\t\t<Button id=\"divide\" value=\"/\" process={process} />\n\n\t\t\t\t<Button id=\"seven\" value=\"7\" process={process} />\n\t\t\t\t<Button id=\"eight\" value=\"8\" process={process} />\n\t\t\t\t<Button id=\"nine\" value=\"9\" process={process} />\n\t\t\t\t<Button id=\"multiply\" value=\"*\" process={process} />\n\n\t\t\t\t<Button id=\"four\" value=\"4\" process={process} />\n\t\t\t\t<Button id=\"five\" value=\"5\" process={process} />\n\t\t\t\t<Button id=\"six\" value=\"6\" process={process} />\n\t\t\t\t<Button id=\"subtract\" value=\"-\" process={process} />\n\n\t\t\t\t<Button id=\"one\" value=\"1\" process={process} />\n\t\t\t\t<Button id=\"two\" value=\"2\" process={process} />\n\t\t\t\t<Button id=\"three\" value=\"3\" process={process} />\n\t\t\t\t<Button id=\"add\" value=\"+\" process={process} />\n\n\t\t\t\t<Button id=\"decimate\" value=\".\" process={process} />\n\t\t\t\t<Button id=\"zero\" value=\"0\" process={process} />\n\t\t\t\t<Button id=\"solve\" value=\"=\" process={process} />\n\t\t\t</div>\n\t\t);\n\t}\n}","import './index.css';\nimport process from './functions/process';\nimport Output from './components/Output';\nimport React from 'react';\nimport Buttons from './components/Buttons';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"0\"\n    }\n  }\n\n  handleClick = (key) => {\n    let newOutput = process(key, this.state.output);\n    this.setState({\n      output: newOutput\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"calculator\">\n        <Output output={this.state.output} />\n        <Buttons process={this.handleClick} />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const endsWithOperator = (string) => {\n\treturn string.slice(-1).search(/\\+|\\-|\\*|\\//) !== -1;\n}\n\nexport default endsWithOperator;","import endsWithOperator from \"./endsWithOperator\";\n\nconst solve = (output) => {\n  if (endsWithOperator(output)) {\n    return output;\n  }\n  else if (output === \"Infinity\" || output === \"-Infinity\") {\n    return \"Undefined\";\n  }\n  return eval(output).toString();\n}\n\nexport default solve;"],"sourceRoot":""}